@property --hue {
    initial-value: 0;
    inherits: false;
    syntax: '<number>';
}
@property --radius {
    initial-value: 50;
    inherits: false;
    syntax: '<number>';
}/*todo check percentage defining*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.wrapper {
    box-sizing: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    width: 100vw;
    background: black;
}

.loader {
    position: relative;
    width: 250px;
    height: 250px;
    border-radius: 50%;
    overflow: hidden;
    transform: rotate(175deg);
}

.loader span {
    position: absolute;
    top: calc(12px * var(--i));
    left: calc(12px * var(--i));
    right: calc(12px * var(--i));
    bottom: calc(12px * var(--i));
    border: 10px solid black;
    border-top: 10px solid hsl(var(--hue, 0), 80%, 50%);
    border-left: 10px solid hsl(var(--hue, 0), 80%, 50%);
    border-radius: calc(var(--radius) * 1%);
    animation: animate 1s alternate ease-in-out infinite, rainbow 2s infinite linear;
    animation-delay: calc(0.1s * var(--i));
}


@keyframes rainbow {
    to {
        --hue: 360;
    }
}

@keyframes animate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(90deg);
    }
}